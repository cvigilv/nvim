PYENV=. venv/bin/activate
FORMATTER=ruff format
LINTER=ruff check --fix
TESTER=pytest
PROJECTNAME=$(shell basename `pwd` | sed -e "s/\ //g; s/-/_/g")
MODULENAME=$(shell basename `pwd` | tr [:upper:] [:lower:] | sed -e "s/-/_/g")

.PHONY: setup venv lint format precommit test upload run clean help

help: ## Print this message
	@echo "usage: make [target] ..."
	@echo ""
	@echo "Available targets:"
	@grep --no-filename "##" $(MAKEFILE_LIST) | \
		grep --invert-match $$'\t' | \
		sed -e "s/\(.*\):.*## \(.*\)/ - \1:  \t\2/"

setup: ## Setup python3 virtualenv and README for project
	python3 -m venv venv
	$(PYENV); pip install --upgrade pip; pip install -Ur requirements.txt
	$(PYENV); pre-commit install

venv: ## Setup python3 virtualenv
	python3 -m venv venv
	$(PYENV); pip install --upgrade pip; pip install -Ur requirements.txt
	$(PYENV); pre-commit install

jupyter: ## Install project virtualenv as kernel in Jupyter
	$(PYENV); pip install ipykernel
	$(PYENV); python -m ipykernel install --user --name=$(MODULENAME)

lint: ## Lint project codebase
	$(PYENV); $(LINTER) .

format: ## Format project codebase
	$(PYENV); $(FORMATTER) .

precommit: lint format ## Prepare codebase for commiting changes to GitHub

test: ## Test project codebase covered in `tests/`
	$(PYENV); $(TESTER) .

clean: ## Remove virtualenv
	rm -rf venv
